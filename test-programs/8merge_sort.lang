// Given a list of array sort the array in O(Nlog(N)) time
// This is an example of recursion which any language must be able to solve

// Declare/Define functions 
import print;
import scan;
import length;  

int MERGE (int A, int low, int mid, int high){

	int n1 = mid - low + 1;
	int n2 = high - mid; 

	int L[ 100 ], R[ 100 ];

	for( int i=0 ; i < n1; i += 1)
		L[ i ] = A[ low+i ];
	;

	for( int j=0; j < n1;j += 1)
		R[ j ] = A[ mid+j+1 ];	
	;

	int i = 0;
	int j = 0;
	int k = l; 

	while( i < n1 && j < n2 ){
		if( L[ i ]   < R[ j ] ){
			A[ k ] = L[ i ];
			i = i + 1;
		}
		else{ 
			A[ k ] = R[ j ];
			j = j + 1;
		};				
		k = k + 1; 
	};

	while( i < n1 ){
		A[ k ] = L[ i ];
		i = i + 1; 
		k = k + 1; 
	};

	while( j < n2 ){ 
		A[ k ] = R[ j ];
		j = j +1; 
		k = k +1;
	}; 		

	return A;
};

int SORT( int A, int low, int high ){

	if( low < high ){

		int mid = ( low + high )/2;

		A = SORT( A, low, mid );

		A = SORT(A,mid+1,high );

		A = MERGE( A, low, mid, high ); 
	};

	return A;
};

int main(){ 
	int A[ 100 ];
	scanf("%s", A);
	
	int length = length( A );
	A = SORT(A,0,length);
	print(A);
};