Terminals unused in grammar

   ELIF
   HEXAGON


Grammar

    0 $accept: S $end

    1 S: Block

    2 Block: %empty
    3      | Block Line

    4 Line: Import_Statement SEMICOLON
    5     | Class_defination SEMICOLON
    6     | Function_defination SEMICOLON
    7     | Declaration SEMICOLON
    8     | Assign SEMICOLON
    9     | Expr SEMICOLON
   10     | Cond SEMICOLON
   11     | Loop1 SEMICOLON
   12     | Loop2 SEMICOLON
   13     | Return_data SEMICOLON
   14     | Break_data SEMICOLON
   15     | Continue_data SEMICOLON
   16     | SEMICOLON

   17 Import_Statement: IMPORT ID_LIST

   18 Class_defination: CLASS ID OPEN_BRACE Block CLOSE_BRACE

   19 Declaration: Datatype ID_LIST

   20 Function_defination: FUNCTION_DEC ID OPEN_PAREN Parameter_list CLOSE_PAREN OPEN_BRACE Block CLOSE_BRACE

   21 Parameter_list: %empty
   22               | Datatype ID
   23               | Parameter_list COMMA Datatype ID

   24 Return_data: RETURN Expr
   25            | RETURN

   26 Continue_data: CONTINUE

   27 Break_data: BREAK

   28 Assign: Location Assign_Op Expr

   29 Location: ID
   30         | ID OPEN_BRACKET Expr CLOSE_BRACKET
   31         | Datatype ID
   32         | Datatype ID OPEN_BRACKET Expr CLOSE_BRACKET

   33 Assign_Op: ASSIGN
   34          | UNI_ADD
   35          | UNI_MIN
   36          | UNI_MUL
   37          | UNI_DIV
   38          | UNI_MOD

   39 Expr: ID
   40     | ID OPEN_BRACKET Expr CLOSE_BRACKET
   41     | ID OPEN_PAREN Expr_List CLOSE_PAREN
   42     | OPEN_PAREN Expr CLOSE_PAREN
   43     | INT
   44     | CHAR
   45     | STRING
   46     | FLOAT
   47     | BOOL
   48     | Expr OP_OR Expr
   49     | Expr OP_AND Expr
   50     | Expr ADD Expr
   51     | Expr MIN Expr
   52     | Expr MUL Expr
   53     | Expr DIV Expr
   54     | Expr MOD Expr
   55     | Expr EQUALS Expr
   56     | Expr NOT_EQUALS Expr
   57     | Expr GT Expr
   58     | Expr GTE Expr
   59     | Expr COND_AND Expr
   60     | Expr COND_OR Expr
   61     | Expr LT Expr
   62     | Expr LTE Expr
   63     | OP_NOT Expr

   64 Run_Condition: Line
   65              | OPEN_BRACE Block CLOSE_BRACE

   66 Cond: IF_list Else_list

   67 IF_list: IF OPEN_PAREN Expr CLOSE_PAREN Run_Condition

   68 Else_list: %empty
   69          | ELSE Run_Condition

   70 Loop1: WHILE OPEN_PAREN Expr CLOSE_PAREN Run_Condition

   71 Loop2: FOR OPEN_PAREN Assign SEMICOLON Expr SEMICOLON Assign CLOSE_PAREN Run_Condition

   72 Datatype: INT_DATA_TYPE
   73         | FLOAT_DATA_TYPE
   74         | CHAR_DATA_TYPE
   75         | STRING_DATA_TYPE
   76         | BOOL_DATA_TYPE

   77 ID_LIST: %empty
   78        | ID_LIST COMMA ID
   79        | ID OPEN_BRACKET Expr CLOSE_BRACKET
   80        | ID

   81 Expr_List: %empty
   82          | Expr_List COMMA Expr
   83          | Expr


Terminals, with rules where they appear

$end (0) 0
error (256)
UNI_ADD (258) 34
UNI_MIN (259) 35
UNI_MUL (260) 36
UNI_DIV (261) 37
UNI_MOD (262) 38
EQUALS (263) 55
NOT_EQUALS (264) 56
GTE (265) 58
LTE (266) 62
GT (267) 57
LT (268) 61
ADD (269) 50
MIN (270) 51
MUL (271) 52
DIV (272) 53
MOD (273) 54
ASSIGN (274) 33
COND_AND (275) 59
COND_OR (276) 60
OP_OR (277) 48
OP_AND (278) 49
OP_NOT (279) 63
COMMA (280) 23 78 82
SEMICOLON (281) 4 5 6 7 8 9 10 11 12 13 14 15 16 71
OPEN_PAREN (282) 20 41 42 67 70 71
CLOSE_PAREN (283) 20 41 42 67 70 71
OPEN_BRACKET (284) 30 32 40 79
CLOSE_BRACKET (285) 30 32 40 79
OPEN_BRACE (286) 18 20 65
CLOSE_BRACE (287) 18 20 65
IF (288) 67
ELIF (289)
ELSE (290) 69
FOR (291) 71
WHILE (292) 70
BREAK (293) 27
CONTINUE (294) 26
INT_DATA_TYPE (295) 72
FLOAT_DATA_TYPE (296) 73
CHAR_DATA_TYPE (297) 74
STRING_DATA_TYPE (298) 75
BOOL_DATA_TYPE (299) 76
ID (300) 18 20 22 23 29 30 31 32 39 40 41 78 79 80
INT (301) 43
FLOAT (302) 46
HEXAGON (303)
CHAR (304) 44
STRING (305) 45
BOOL (306) 47
CLASS (307) 18
IMPORT (308) 17
FUNCTION_DEC (309) 20
RETURN (310) 24 25


Nonterminals, with rules where they appear

$accept (56)
    on left: 0
S (57)
    on left: 1, on right: 0
Block (58)
    on left: 2 3, on right: 1 3 18 20 65
Line (59)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15 16, on right: 3 64
Import_Statement (60)
    on left: 17, on right: 4
Class_defination (61)
    on left: 18, on right: 5
Declaration (62)
    on left: 19, on right: 7
Function_defination (63)
    on left: 20, on right: 6
Parameter_list (64)
    on left: 21 22 23, on right: 20 23
Return_data (65)
    on left: 24 25, on right: 13
Continue_data (66)
    on left: 26, on right: 15
Break_data (67)
    on left: 27, on right: 14
Assign (68)
    on left: 28, on right: 8 71
Location (69)
    on left: 29 30 31 32, on right: 28
Assign_Op (70)
    on left: 33 34 35 36 37 38, on right: 28
Expr (71)
    on left: 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56
    57 58 59 60 61 62 63, on right: 9 24 28 30 32 40 42 48 49 50 51
    52 53 54 55 56 57 58 59 60 61 62 63 67 70 71 79 82 83
Run_Condition (72)
    on left: 64 65, on right: 67 69 70 71
Cond (73)
    on left: 66, on right: 10
IF_list (74)
    on left: 67, on right: 66
Else_list (75)
    on left: 68 69, on right: 66
Loop1 (76)
    on left: 70, on right: 11
Loop2 (77)
    on left: 71, on right: 12
Datatype (78)
    on left: 72 73 74 75 76, on right: 19 22 23 31 32
ID_LIST (79)
    on left: 77 78 79 80, on right: 17 19 78
Expr_List (80)
    on left: 81 82 83, on right: 41 82


State 0

    0 $accept: . S $end

    $default  reduce using rule 2 (Block)

    S      go to state 1
    Block  go to state 2


State 1

    0 $accept: S . $end

    $end  shift, and go to state 3


State 2

    1 S: Block .
    3 Block: Block . Line

    OP_NOT            shift, and go to state 4
    SEMICOLON         shift, and go to state 5
    OPEN_PAREN        shift, and go to state 6
    IF                shift, and go to state 7
    FOR               shift, and go to state 8
    WHILE             shift, and go to state 9
    BREAK             shift, and go to state 10
    CONTINUE          shift, and go to state 11
    INT_DATA_TYPE     shift, and go to state 12
    FLOAT_DATA_TYPE   shift, and go to state 13
    CHAR_DATA_TYPE    shift, and go to state 14
    STRING_DATA_TYPE  shift, and go to state 15
    BOOL_DATA_TYPE    shift, and go to state 16
    ID                shift, and go to state 17
    INT               shift, and go to state 18
    FLOAT             shift, and go to state 19
    CHAR              shift, and go to state 20
    STRING            shift, and go to state 21
    BOOL              shift, and go to state 22
    CLASS             shift, and go to state 23
    IMPORT            shift, and go to state 24
    FUNCTION_DEC      shift, and go to state 25
    RETURN            shift, and go to state 26

    $default  reduce using rule 1 (S)

    Line                 go to state 27
    Import_Statement     go to state 28
    Class_defination     go to state 29
    Declaration          go to state 30
    Function_defination  go to state 31
    Return_data          go to state 32
    Continue_data        go to state 33
    Break_data           go to state 34
    Assign               go to state 35
    Location             go to state 36
    Expr                 go to state 37
    Cond                 go to state 38
    IF_list              go to state 39
    Loop1                go to state 40
    Loop2                go to state 41
    Datatype             go to state 42


State 3

    0 $accept: S $end .

    $default  accept


State 4

   63 Expr: OP_NOT . Expr

    OP_NOT      shift, and go to state 4
    OPEN_PAREN  shift, and go to state 6
    ID          shift, and go to state 43
    INT         shift, and go to state 18
    FLOAT       shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21
    BOOL        shift, and go to state 22

    Expr  go to state 44


State 5

   16 Line: SEMICOLON .

    $default  reduce using rule 16 (Line)


State 6

   42 Expr: OPEN_PAREN . Expr CLOSE_PAREN

    OP_NOT      shift, and go to state 4
    OPEN_PAREN  shift, and go to state 6
    ID          shift, and go to state 43
    INT         shift, and go to state 18
    FLOAT       shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21
    BOOL        shift, and go to state 22

    Expr  go to state 45


State 7

   67 IF_list: IF . OPEN_PAREN Expr CLOSE_PAREN Run_Condition

    OPEN_PAREN  shift, and go to state 46


State 8

   71 Loop2: FOR . OPEN_PAREN Assign SEMICOLON Expr SEMICOLON Assign CLOSE_PAREN Run_Condition

    OPEN_PAREN  shift, and go to state 47


State 9

   70 Loop1: WHILE . OPEN_PAREN Expr CLOSE_PAREN Run_Condition

    OPEN_PAREN  shift, and go to state 48


State 10

   27 Break_data: BREAK .

    $default  reduce using rule 27 (Break_data)


State 11

   26 Continue_data: CONTINUE .

    $default  reduce using rule 26 (Continue_data)


State 12

   72 Datatype: INT_DATA_TYPE .

    $default  reduce using rule 72 (Datatype)


State 13

   73 Datatype: FLOAT_DATA_TYPE .

    $default  reduce using rule 73 (Datatype)


State 14

   74 Datatype: CHAR_DATA_TYPE .

    $default  reduce using rule 74 (Datatype)


State 15

   75 Datatype: STRING_DATA_TYPE .

    $default  reduce using rule 75 (Datatype)


State 16

   76 Datatype: BOOL_DATA_TYPE .

    $default  reduce using rule 76 (Datatype)


State 17

   29 Location: ID .
   30         | ID . OPEN_BRACKET Expr CLOSE_BRACKET
   39 Expr: ID .
   40     | ID . OPEN_BRACKET Expr CLOSE_BRACKET
   41     | ID . OPEN_PAREN Expr_List CLOSE_PAREN

    OPEN_PAREN    shift, and go to state 49
    OPEN_BRACKET  shift, and go to state 50

    UNI_ADD   reduce using rule 29 (Location)
    UNI_MIN   reduce using rule 29 (Location)
    UNI_MUL   reduce using rule 29 (Location)
    UNI_DIV   reduce using rule 29 (Location)
    UNI_MOD   reduce using rule 29 (Location)
    ASSIGN    reduce using rule 29 (Location)
    $default  reduce using rule 39 (Expr)


State 18

   43 Expr: INT .

    $default  reduce using rule 43 (Expr)


State 19

   46 Expr: FLOAT .

    $default  reduce using rule 46 (Expr)


State 20

   44 Expr: CHAR .

    $default  reduce using rule 44 (Expr)


State 21

   45 Expr: STRING .

    $default  reduce using rule 45 (Expr)


State 22

   47 Expr: BOOL .

    $default  reduce using rule 47 (Expr)


State 23

   18 Class_defination: CLASS . ID OPEN_BRACE Block CLOSE_BRACE

    ID  shift, and go to state 51


State 24

   17 Import_Statement: IMPORT . ID_LIST

    ID  shift, and go to state 52

    $default  reduce using rule 77 (ID_LIST)

    ID_LIST  go to state 53


State 25

   20 Function_defination: FUNCTION_DEC . ID OPEN_PAREN Parameter_list CLOSE_PAREN OPEN_BRACE Block CLOSE_BRACE

    ID  shift, and go to state 54


State 26

   24 Return_data: RETURN . Expr
   25            | RETURN .

    OP_NOT      shift, and go to state 4
    OPEN_PAREN  shift, and go to state 6
    ID          shift, and go to state 43
    INT         shift, and go to state 18
    FLOAT       shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21
    BOOL        shift, and go to state 22

    $default  reduce using rule 25 (Return_data)

    Expr  go to state 55


State 27

    3 Block: Block Line .

    $default  reduce using rule 3 (Block)


State 28

    4 Line: Import_Statement . SEMICOLON

    SEMICOLON  shift, and go to state 56


State 29

    5 Line: Class_defination . SEMICOLON

    SEMICOLON  shift, and go to state 57


State 30

    7 Line: Declaration . SEMICOLON

    SEMICOLON  shift, and go to state 58


State 31

    6 Line: Function_defination . SEMICOLON

    SEMICOLON  shift, and go to state 59


State 32

   13 Line: Return_data . SEMICOLON

    SEMICOLON  shift, and go to state 60


State 33

   15 Line: Continue_data . SEMICOLON

    SEMICOLON  shift, and go to state 61


State 34

   14 Line: Break_data . SEMICOLON

    SEMICOLON  shift, and go to state 62


State 35

    8 Line: Assign . SEMICOLON

    SEMICOLON  shift, and go to state 63


State 36

   28 Assign: Location . Assign_Op Expr

    UNI_ADD  shift, and go to state 64
    UNI_MIN  shift, and go to state 65
    UNI_MUL  shift, and go to state 66
    UNI_DIV  shift, and go to state 67
    UNI_MOD  shift, and go to state 68
    ASSIGN   shift, and go to state 69

    Assign_Op  go to state 70


State 37

    9 Line: Expr . SEMICOLON
   48 Expr: Expr . OP_OR Expr
   49     | Expr . OP_AND Expr
   50     | Expr . ADD Expr
   51     | Expr . MIN Expr
   52     | Expr . MUL Expr
   53     | Expr . DIV Expr
   54     | Expr . MOD Expr
   55     | Expr . EQUALS Expr
   56     | Expr . NOT_EQUALS Expr
   57     | Expr . GT Expr
   58     | Expr . GTE Expr
   59     | Expr . COND_AND Expr
   60     | Expr . COND_OR Expr
   61     | Expr . LT Expr
   62     | Expr . LTE Expr

    EQUALS      shift, and go to state 71
    NOT_EQUALS  shift, and go to state 72
    GTE         shift, and go to state 73
    LTE         shift, and go to state 74
    GT          shift, and go to state 75
    LT          shift, and go to state 76
    ADD         shift, and go to state 77
    MIN         shift, and go to state 78
    MUL         shift, and go to state 79
    DIV         shift, and go to state 80
    MOD         shift, and go to state 81
    COND_AND    shift, and go to state 82
    COND_OR     shift, and go to state 83
    OP_OR       shift, and go to state 84
    OP_AND      shift, and go to state 85
    SEMICOLON   shift, and go to state 86


State 38

   10 Line: Cond . SEMICOLON

    SEMICOLON  shift, and go to state 87


State 39

   66 Cond: IF_list . Else_list

    ELSE  shift, and go to state 88

    $default  reduce using rule 68 (Else_list)

    Else_list  go to state 89


State 40

   11 Line: Loop1 . SEMICOLON

    SEMICOLON  shift, and go to state 90


State 41

   12 Line: Loop2 . SEMICOLON

    SEMICOLON  shift, and go to state 91


State 42

   19 Declaration: Datatype . ID_LIST
   31 Location: Datatype . ID
   32         | Datatype . ID OPEN_BRACKET Expr CLOSE_BRACKET

    ID  shift, and go to state 92

    $default  reduce using rule 77 (ID_LIST)

    ID_LIST  go to state 93


State 43

   39 Expr: ID .
   40     | ID . OPEN_BRACKET Expr CLOSE_BRACKET
   41     | ID . OPEN_PAREN Expr_List CLOSE_PAREN

    OPEN_PAREN    shift, and go to state 49
    OPEN_BRACKET  shift, and go to state 94

    $default  reduce using rule 39 (Expr)


State 44

   48 Expr: Expr . OP_OR Expr
   49     | Expr . OP_AND Expr
   50     | Expr . ADD Expr
   51     | Expr . MIN Expr
   52     | Expr . MUL Expr
   53     | Expr . DIV Expr
   54     | Expr . MOD Expr
   55     | Expr . EQUALS Expr
   56     | Expr . NOT_EQUALS Expr
   57     | Expr . GT Expr
   58     | Expr . GTE Expr
   59     | Expr . COND_AND Expr
   60     | Expr . COND_OR Expr
   61     | Expr . LT Expr
   62     | Expr . LTE Expr
   63     | OP_NOT Expr .

    $default  reduce using rule 63 (Expr)


State 45

   42 Expr: OPEN_PAREN Expr . CLOSE_PAREN
   48     | Expr . OP_OR Expr
   49     | Expr . OP_AND Expr
   50     | Expr . ADD Expr
   51     | Expr . MIN Expr
   52     | Expr . MUL Expr
   53     | Expr . DIV Expr
   54     | Expr . MOD Expr
   55     | Expr . EQUALS Expr
   56     | Expr . NOT_EQUALS Expr
   57     | Expr . GT Expr
   58     | Expr . GTE Expr
   59     | Expr . COND_AND Expr
   60     | Expr . COND_OR Expr
   61     | Expr . LT Expr
   62     | Expr . LTE Expr

    EQUALS       shift, and go to state 71
    NOT_EQUALS   shift, and go to state 72
    GTE          shift, and go to state 73
    LTE          shift, and go to state 74
    GT           shift, and go to state 75
    LT           shift, and go to state 76
    ADD          shift, and go to state 77
    MIN          shift, and go to state 78
    MUL          shift, and go to state 79
    DIV          shift, and go to state 80
    MOD          shift, and go to state 81
    COND_AND     shift, and go to state 82
    COND_OR      shift, and go to state 83
    OP_OR        shift, and go to state 84
    OP_AND       shift, and go to state 85
    CLOSE_PAREN  shift, and go to state 95


State 46

   67 IF_list: IF OPEN_PAREN . Expr CLOSE_PAREN Run_Condition

    OP_NOT      shift, and go to state 4
    OPEN_PAREN  shift, and go to state 6
    ID          shift, and go to state 43
    INT         shift, and go to state 18
    FLOAT       shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21
    BOOL        shift, and go to state 22

    Expr  go to state 96


State 47

   71 Loop2: FOR OPEN_PAREN . Assign SEMICOLON Expr SEMICOLON Assign CLOSE_PAREN Run_Condition

    INT_DATA_TYPE     shift, and go to state 12
    FLOAT_DATA_TYPE   shift, and go to state 13
    CHAR_DATA_TYPE    shift, and go to state 14
    STRING_DATA_TYPE  shift, and go to state 15
    BOOL_DATA_TYPE    shift, and go to state 16
    ID                shift, and go to state 97

    Assign    go to state 98
    Location  go to state 36
    Datatype  go to state 99


State 48

   70 Loop1: WHILE OPEN_PAREN . Expr CLOSE_PAREN Run_Condition

    OP_NOT      shift, and go to state 4
    OPEN_PAREN  shift, and go to state 6
    ID          shift, and go to state 43
    INT         shift, and go to state 18
    FLOAT       shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21
    BOOL        shift, and go to state 22

    Expr  go to state 100


State 49

   41 Expr: ID OPEN_PAREN . Expr_List CLOSE_PAREN

    OP_NOT      shift, and go to state 4
    OPEN_PAREN  shift, and go to state 6
    ID          shift, and go to state 43
    INT         shift, and go to state 18
    FLOAT       shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21
    BOOL        shift, and go to state 22

    $default  reduce using rule 81 (Expr_List)

    Expr       go to state 101
    Expr_List  go to state 102


State 50

   30 Location: ID OPEN_BRACKET . Expr CLOSE_BRACKET
   40 Expr: ID OPEN_BRACKET . Expr CLOSE_BRACKET

    OP_NOT      shift, and go to state 4
    OPEN_PAREN  shift, and go to state 6
    ID          shift, and go to state 43
    INT         shift, and go to state 18
    FLOAT       shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21
    BOOL        shift, and go to state 22

    Expr  go to state 103


State 51

   18 Class_defination: CLASS ID . OPEN_BRACE Block CLOSE_BRACE

    OPEN_BRACE  shift, and go to state 104


State 52

   79 ID_LIST: ID . OPEN_BRACKET Expr CLOSE_BRACKET
   80        | ID .

    OPEN_BRACKET  shift, and go to state 105

    $default  reduce using rule 80 (ID_LIST)


State 53

   17 Import_Statement: IMPORT ID_LIST .
   78 ID_LIST: ID_LIST . COMMA ID

    COMMA  shift, and go to state 106

    $default  reduce using rule 17 (Import_Statement)


State 54

   20 Function_defination: FUNCTION_DEC ID . OPEN_PAREN Parameter_list CLOSE_PAREN OPEN_BRACE Block CLOSE_BRACE

    OPEN_PAREN  shift, and go to state 107


State 55

   24 Return_data: RETURN Expr .
   48 Expr: Expr . OP_OR Expr
   49     | Expr . OP_AND Expr
   50     | Expr . ADD Expr
   51     | Expr . MIN Expr
   52     | Expr . MUL Expr
   53     | Expr . DIV Expr
   54     | Expr . MOD Expr
   55     | Expr . EQUALS Expr
   56     | Expr . NOT_EQUALS Expr
   57     | Expr . GT Expr
   58     | Expr . GTE Expr
   59     | Expr . COND_AND Expr
   60     | Expr . COND_OR Expr
   61     | Expr . LT Expr
   62     | Expr . LTE Expr

    EQUALS      shift, and go to state 71
    NOT_EQUALS  shift, and go to state 72
    GTE         shift, and go to state 73
    LTE         shift, and go to state 74
    GT          shift, and go to state 75
    LT          shift, and go to state 76
    ADD         shift, and go to state 77
    MIN         shift, and go to state 78
    MUL         shift, and go to state 79
    DIV         shift, and go to state 80
    MOD         shift, and go to state 81
    COND_AND    shift, and go to state 82
    COND_OR     shift, and go to state 83
    OP_OR       shift, and go to state 84
    OP_AND      shift, and go to state 85

    $default  reduce using rule 24 (Return_data)


State 56

    4 Line: Import_Statement SEMICOLON .

    $default  reduce using rule 4 (Line)


State 57

    5 Line: Class_defination SEMICOLON .

    $default  reduce using rule 5 (Line)


State 58

    7 Line: Declaration SEMICOLON .

    $default  reduce using rule 7 (Line)


State 59

    6 Line: Function_defination SEMICOLON .

    $default  reduce using rule 6 (Line)


State 60

   13 Line: Return_data SEMICOLON .

    $default  reduce using rule 13 (Line)


State 61

   15 Line: Continue_data SEMICOLON .

    $default  reduce using rule 15 (Line)


State 62

   14 Line: Break_data SEMICOLON .

    $default  reduce using rule 14 (Line)


State 63

    8 Line: Assign SEMICOLON .

    $default  reduce using rule 8 (Line)


State 64

   34 Assign_Op: UNI_ADD .

    $default  reduce using rule 34 (Assign_Op)


State 65

   35 Assign_Op: UNI_MIN .

    $default  reduce using rule 35 (Assign_Op)


State 66

   36 Assign_Op: UNI_MUL .

    $default  reduce using rule 36 (Assign_Op)


State 67

   37 Assign_Op: UNI_DIV .

    $default  reduce using rule 37 (Assign_Op)


State 68

   38 Assign_Op: UNI_MOD .

    $default  reduce using rule 38 (Assign_Op)


State 69

   33 Assign_Op: ASSIGN .

    $default  reduce using rule 33 (Assign_Op)


State 70

   28 Assign: Location Assign_Op . Expr

    OP_NOT      shift, and go to state 4
    OPEN_PAREN  shift, and go to state 6
    ID          shift, and go to state 43
    INT         shift, and go to state 18
    FLOAT       shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21
    BOOL        shift, and go to state 22

    Expr  go to state 108


State 71

   55 Expr: Expr EQUALS . Expr

    OP_NOT      shift, and go to state 4
    OPEN_PAREN  shift, and go to state 6
    ID          shift, and go to state 43
    INT         shift, and go to state 18
    FLOAT       shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21
    BOOL        shift, and go to state 22

    Expr  go to state 109


State 72

   56 Expr: Expr NOT_EQUALS . Expr

    OP_NOT      shift, and go to state 4
    OPEN_PAREN  shift, and go to state 6
    ID          shift, and go to state 43
    INT         shift, and go to state 18
    FLOAT       shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21
    BOOL        shift, and go to state 22

    Expr  go to state 110


State 73

   58 Expr: Expr GTE . Expr

    OP_NOT      shift, and go to state 4
    OPEN_PAREN  shift, and go to state 6
    ID          shift, and go to state 43
    INT         shift, and go to state 18
    FLOAT       shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21
    BOOL        shift, and go to state 22

    Expr  go to state 111


State 74

   62 Expr: Expr LTE . Expr

    OP_NOT      shift, and go to state 4
    OPEN_PAREN  shift, and go to state 6
    ID          shift, and go to state 43
    INT         shift, and go to state 18
    FLOAT       shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21
    BOOL        shift, and go to state 22

    Expr  go to state 112


State 75

   57 Expr: Expr GT . Expr

    OP_NOT      shift, and go to state 4
    OPEN_PAREN  shift, and go to state 6
    ID          shift, and go to state 43
    INT         shift, and go to state 18
    FLOAT       shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21
    BOOL        shift, and go to state 22

    Expr  go to state 113


State 76

   61 Expr: Expr LT . Expr

    OP_NOT      shift, and go to state 4
    OPEN_PAREN  shift, and go to state 6
    ID          shift, and go to state 43
    INT         shift, and go to state 18
    FLOAT       shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21
    BOOL        shift, and go to state 22

    Expr  go to state 114


State 77

   50 Expr: Expr ADD . Expr

    OP_NOT      shift, and go to state 4
    OPEN_PAREN  shift, and go to state 6
    ID          shift, and go to state 43
    INT         shift, and go to state 18
    FLOAT       shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21
    BOOL        shift, and go to state 22

    Expr  go to state 115


State 78

   51 Expr: Expr MIN . Expr

    OP_NOT      shift, and go to state 4
    OPEN_PAREN  shift, and go to state 6
    ID          shift, and go to state 43
    INT         shift, and go to state 18
    FLOAT       shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21
    BOOL        shift, and go to state 22

    Expr  go to state 116


State 79

   52 Expr: Expr MUL . Expr

    OP_NOT      shift, and go to state 4
    OPEN_PAREN  shift, and go to state 6
    ID          shift, and go to state 43
    INT         shift, and go to state 18
    FLOAT       shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21
    BOOL        shift, and go to state 22

    Expr  go to state 117


State 80

   53 Expr: Expr DIV . Expr

    OP_NOT      shift, and go to state 4
    OPEN_PAREN  shift, and go to state 6
    ID          shift, and go to state 43
    INT         shift, and go to state 18
    FLOAT       shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21
    BOOL        shift, and go to state 22

    Expr  go to state 118


State 81

   54 Expr: Expr MOD . Expr

    OP_NOT      shift, and go to state 4
    OPEN_PAREN  shift, and go to state 6
    ID          shift, and go to state 43
    INT         shift, and go to state 18
    FLOAT       shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21
    BOOL        shift, and go to state 22

    Expr  go to state 119


State 82

   59 Expr: Expr COND_AND . Expr

    OP_NOT      shift, and go to state 4
    OPEN_PAREN  shift, and go to state 6
    ID          shift, and go to state 43
    INT         shift, and go to state 18
    FLOAT       shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21
    BOOL        shift, and go to state 22

    Expr  go to state 120


State 83

   60 Expr: Expr COND_OR . Expr

    OP_NOT      shift, and go to state 4
    OPEN_PAREN  shift, and go to state 6
    ID          shift, and go to state 43
    INT         shift, and go to state 18
    FLOAT       shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21
    BOOL        shift, and go to state 22

    Expr  go to state 121


State 84

   48 Expr: Expr OP_OR . Expr

    OP_NOT      shift, and go to state 4
    OPEN_PAREN  shift, and go to state 6
    ID          shift, and go to state 43
    INT         shift, and go to state 18
    FLOAT       shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21
    BOOL        shift, and go to state 22

    Expr  go to state 122


State 85

   49 Expr: Expr OP_AND . Expr

    OP_NOT      shift, and go to state 4
    OPEN_PAREN  shift, and go to state 6
    ID          shift, and go to state 43
    INT         shift, and go to state 18
    FLOAT       shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21
    BOOL        shift, and go to state 22

    Expr  go to state 123


State 86

    9 Line: Expr SEMICOLON .

    $default  reduce using rule 9 (Line)


State 87

   10 Line: Cond SEMICOLON .

    $default  reduce using rule 10 (Line)


State 88

   69 Else_list: ELSE . Run_Condition

    OP_NOT            shift, and go to state 4
    SEMICOLON         shift, and go to state 5
    OPEN_PAREN        shift, and go to state 6
    OPEN_BRACE        shift, and go to state 124
    IF                shift, and go to state 7
    FOR               shift, and go to state 8
    WHILE             shift, and go to state 9
    BREAK             shift, and go to state 10
    CONTINUE          shift, and go to state 11
    INT_DATA_TYPE     shift, and go to state 12
    FLOAT_DATA_TYPE   shift, and go to state 13
    CHAR_DATA_TYPE    shift, and go to state 14
    STRING_DATA_TYPE  shift, and go to state 15
    BOOL_DATA_TYPE    shift, and go to state 16
    ID                shift, and go to state 17
    INT               shift, and go to state 18
    FLOAT             shift, and go to state 19
    CHAR              shift, and go to state 20
    STRING            shift, and go to state 21
    BOOL              shift, and go to state 22
    CLASS             shift, and go to state 23
    IMPORT            shift, and go to state 24
    FUNCTION_DEC      shift, and go to state 25
    RETURN            shift, and go to state 26

    Line                 go to state 125
    Import_Statement     go to state 28
    Class_defination     go to state 29
    Declaration          go to state 30
    Function_defination  go to state 31
    Return_data          go to state 32
    Continue_data        go to state 33
    Break_data           go to state 34
    Assign               go to state 35
    Location             go to state 36
    Expr                 go to state 37
    Run_Condition        go to state 126
    Cond                 go to state 38
    IF_list              go to state 39
    Loop1                go to state 40
    Loop2                go to state 41
    Datatype             go to state 42


State 89

   66 Cond: IF_list Else_list .

    $default  reduce using rule 66 (Cond)


State 90

   11 Line: Loop1 SEMICOLON .

    $default  reduce using rule 11 (Line)


State 91

   12 Line: Loop2 SEMICOLON .

    $default  reduce using rule 12 (Line)


State 92

   31 Location: Datatype ID .
   32         | Datatype ID . OPEN_BRACKET Expr CLOSE_BRACKET
   79 ID_LIST: ID . OPEN_BRACKET Expr CLOSE_BRACKET
   80        | ID .

    OPEN_BRACKET  shift, and go to state 127

    COMMA      reduce using rule 80 (ID_LIST)
    SEMICOLON  reduce using rule 80 (ID_LIST)
    $default   reduce using rule 31 (Location)


State 93

   19 Declaration: Datatype ID_LIST .
   78 ID_LIST: ID_LIST . COMMA ID

    COMMA  shift, and go to state 106

    $default  reduce using rule 19 (Declaration)


State 94

   40 Expr: ID OPEN_BRACKET . Expr CLOSE_BRACKET

    OP_NOT      shift, and go to state 4
    OPEN_PAREN  shift, and go to state 6
    ID          shift, and go to state 43
    INT         shift, and go to state 18
    FLOAT       shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21
    BOOL        shift, and go to state 22

    Expr  go to state 128


State 95

   42 Expr: OPEN_PAREN Expr CLOSE_PAREN .

    $default  reduce using rule 42 (Expr)


State 96

   48 Expr: Expr . OP_OR Expr
   49     | Expr . OP_AND Expr
   50     | Expr . ADD Expr
   51     | Expr . MIN Expr
   52     | Expr . MUL Expr
   53     | Expr . DIV Expr
   54     | Expr . MOD Expr
   55     | Expr . EQUALS Expr
   56     | Expr . NOT_EQUALS Expr
   57     | Expr . GT Expr
   58     | Expr . GTE Expr
   59     | Expr . COND_AND Expr
   60     | Expr . COND_OR Expr
   61     | Expr . LT Expr
   62     | Expr . LTE Expr
   67 IF_list: IF OPEN_PAREN Expr . CLOSE_PAREN Run_Condition

    EQUALS       shift, and go to state 71
    NOT_EQUALS   shift, and go to state 72
    GTE          shift, and go to state 73
    LTE          shift, and go to state 74
    GT           shift, and go to state 75
    LT           shift, and go to state 76
    ADD          shift, and go to state 77
    MIN          shift, and go to state 78
    MUL          shift, and go to state 79
    DIV          shift, and go to state 80
    MOD          shift, and go to state 81
    COND_AND     shift, and go to state 82
    COND_OR      shift, and go to state 83
    OP_OR        shift, and go to state 84
    OP_AND       shift, and go to state 85
    CLOSE_PAREN  shift, and go to state 129


State 97

   29 Location: ID .
   30         | ID . OPEN_BRACKET Expr CLOSE_BRACKET

    OPEN_BRACKET  shift, and go to state 130

    $default  reduce using rule 29 (Location)


State 98

   71 Loop2: FOR OPEN_PAREN Assign . SEMICOLON Expr SEMICOLON Assign CLOSE_PAREN Run_Condition

    SEMICOLON  shift, and go to state 131


State 99

   31 Location: Datatype . ID
   32         | Datatype . ID OPEN_BRACKET Expr CLOSE_BRACKET

    ID  shift, and go to state 132


State 100

   48 Expr: Expr . OP_OR Expr
   49     | Expr . OP_AND Expr
   50     | Expr . ADD Expr
   51     | Expr . MIN Expr
   52     | Expr . MUL Expr
   53     | Expr . DIV Expr
   54     | Expr . MOD Expr
   55     | Expr . EQUALS Expr
   56     | Expr . NOT_EQUALS Expr
   57     | Expr . GT Expr
   58     | Expr . GTE Expr
   59     | Expr . COND_AND Expr
   60     | Expr . COND_OR Expr
   61     | Expr . LT Expr
   62     | Expr . LTE Expr
   70 Loop1: WHILE OPEN_PAREN Expr . CLOSE_PAREN Run_Condition

    EQUALS       shift, and go to state 71
    NOT_EQUALS   shift, and go to state 72
    GTE          shift, and go to state 73
    LTE          shift, and go to state 74
    GT           shift, and go to state 75
    LT           shift, and go to state 76
    ADD          shift, and go to state 77
    MIN          shift, and go to state 78
    MUL          shift, and go to state 79
    DIV          shift, and go to state 80
    MOD          shift, and go to state 81
    COND_AND     shift, and go to state 82
    COND_OR      shift, and go to state 83
    OP_OR        shift, and go to state 84
    OP_AND       shift, and go to state 85
    CLOSE_PAREN  shift, and go to state 133


State 101

   48 Expr: Expr . OP_OR Expr
   49     | Expr . OP_AND Expr
   50     | Expr . ADD Expr
   51     | Expr . MIN Expr
   52     | Expr . MUL Expr
   53     | Expr . DIV Expr
   54     | Expr . MOD Expr
   55     | Expr . EQUALS Expr
   56     | Expr . NOT_EQUALS Expr
   57     | Expr . GT Expr
   58     | Expr . GTE Expr
   59     | Expr . COND_AND Expr
   60     | Expr . COND_OR Expr
   61     | Expr . LT Expr
   62     | Expr . LTE Expr
   83 Expr_List: Expr .

    EQUALS      shift, and go to state 71
    NOT_EQUALS  shift, and go to state 72
    GTE         shift, and go to state 73
    LTE         shift, and go to state 74
    GT          shift, and go to state 75
    LT          shift, and go to state 76
    ADD         shift, and go to state 77
    MIN         shift, and go to state 78
    MUL         shift, and go to state 79
    DIV         shift, and go to state 80
    MOD         shift, and go to state 81
    COND_AND    shift, and go to state 82
    COND_OR     shift, and go to state 83
    OP_OR       shift, and go to state 84
    OP_AND      shift, and go to state 85

    $default  reduce using rule 83 (Expr_List)


State 102

   41 Expr: ID OPEN_PAREN Expr_List . CLOSE_PAREN
   82 Expr_List: Expr_List . COMMA Expr

    COMMA        shift, and go to state 134
    CLOSE_PAREN  shift, and go to state 135


State 103

   30 Location: ID OPEN_BRACKET Expr . CLOSE_BRACKET
   40 Expr: ID OPEN_BRACKET Expr . CLOSE_BRACKET
   48     | Expr . OP_OR Expr
   49     | Expr . OP_AND Expr
   50     | Expr . ADD Expr
   51     | Expr . MIN Expr
   52     | Expr . MUL Expr
   53     | Expr . DIV Expr
   54     | Expr . MOD Expr
   55     | Expr . EQUALS Expr
   56     | Expr . NOT_EQUALS Expr
   57     | Expr . GT Expr
   58     | Expr . GTE Expr
   59     | Expr . COND_AND Expr
   60     | Expr . COND_OR Expr
   61     | Expr . LT Expr
   62     | Expr . LTE Expr

    EQUALS         shift, and go to state 71
    NOT_EQUALS     shift, and go to state 72
    GTE            shift, and go to state 73
    LTE            shift, and go to state 74
    GT             shift, and go to state 75
    LT             shift, and go to state 76
    ADD            shift, and go to state 77
    MIN            shift, and go to state 78
    MUL            shift, and go to state 79
    DIV            shift, and go to state 80
    MOD            shift, and go to state 81
    COND_AND       shift, and go to state 82
    COND_OR        shift, and go to state 83
    OP_OR          shift, and go to state 84
    OP_AND         shift, and go to state 85
    CLOSE_BRACKET  shift, and go to state 136


State 104

   18 Class_defination: CLASS ID OPEN_BRACE . Block CLOSE_BRACE

    $default  reduce using rule 2 (Block)

    Block  go to state 137


State 105

   79 ID_LIST: ID OPEN_BRACKET . Expr CLOSE_BRACKET

    OP_NOT      shift, and go to state 4
    OPEN_PAREN  shift, and go to state 6
    ID          shift, and go to state 43
    INT         shift, and go to state 18
    FLOAT       shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21
    BOOL        shift, and go to state 22

    Expr  go to state 138


State 106

   78 ID_LIST: ID_LIST COMMA . ID

    ID  shift, and go to state 139


State 107

   20 Function_defination: FUNCTION_DEC ID OPEN_PAREN . Parameter_list CLOSE_PAREN OPEN_BRACE Block CLOSE_BRACE

    INT_DATA_TYPE     shift, and go to state 12
    FLOAT_DATA_TYPE   shift, and go to state 13
    CHAR_DATA_TYPE    shift, and go to state 14
    STRING_DATA_TYPE  shift, and go to state 15
    BOOL_DATA_TYPE    shift, and go to state 16

    $default  reduce using rule 21 (Parameter_list)

    Parameter_list  go to state 140
    Datatype        go to state 141


State 108

   28 Assign: Location Assign_Op Expr .
   48 Expr: Expr . OP_OR Expr
   49     | Expr . OP_AND Expr
   50     | Expr . ADD Expr
   51     | Expr . MIN Expr
   52     | Expr . MUL Expr
   53     | Expr . DIV Expr
   54     | Expr . MOD Expr
   55     | Expr . EQUALS Expr
   56     | Expr . NOT_EQUALS Expr
   57     | Expr . GT Expr
   58     | Expr . GTE Expr
   59     | Expr . COND_AND Expr
   60     | Expr . COND_OR Expr
   61     | Expr . LT Expr
   62     | Expr . LTE Expr

    EQUALS      shift, and go to state 71
    NOT_EQUALS  shift, and go to state 72
    GTE         shift, and go to state 73
    LTE         shift, and go to state 74
    GT          shift, and go to state 75
    LT          shift, and go to state 76
    ADD         shift, and go to state 77
    MIN         shift, and go to state 78
    MUL         shift, and go to state 79
    DIV         shift, and go to state 80
    MOD         shift, and go to state 81
    COND_AND    shift, and go to state 82
    COND_OR     shift, and go to state 83
    OP_OR       shift, and go to state 84
    OP_AND      shift, and go to state 85

    $default  reduce using rule 28 (Assign)


State 109

   48 Expr: Expr . OP_OR Expr
   49     | Expr . OP_AND Expr
   50     | Expr . ADD Expr
   51     | Expr . MIN Expr
   52     | Expr . MUL Expr
   53     | Expr . DIV Expr
   54     | Expr . MOD Expr
   55     | Expr . EQUALS Expr
   55     | Expr EQUALS Expr .
   56     | Expr . NOT_EQUALS Expr
   57     | Expr . GT Expr
   58     | Expr . GTE Expr
   59     | Expr . COND_AND Expr
   60     | Expr . COND_OR Expr
   61     | Expr . LT Expr
   62     | Expr . LTE Expr

    GTE       shift, and go to state 73
    LTE       shift, and go to state 74
    GT        shift, and go to state 75
    LT        shift, and go to state 76
    ADD       shift, and go to state 77
    MIN       shift, and go to state 78
    MUL       shift, and go to state 79
    DIV       shift, and go to state 80
    MOD       shift, and go to state 81
    COND_AND  shift, and go to state 82
    COND_OR   shift, and go to state 83
    OP_OR     shift, and go to state 84
    OP_AND    shift, and go to state 85

    $default  reduce using rule 55 (Expr)


State 110

   48 Expr: Expr . OP_OR Expr
   49     | Expr . OP_AND Expr
   50     | Expr . ADD Expr
   51     | Expr . MIN Expr
   52     | Expr . MUL Expr
   53     | Expr . DIV Expr
   54     | Expr . MOD Expr
   55     | Expr . EQUALS Expr
   56     | Expr . NOT_EQUALS Expr
   56     | Expr NOT_EQUALS Expr .
   57     | Expr . GT Expr
   58     | Expr . GTE Expr
   59     | Expr . COND_AND Expr
   60     | Expr . COND_OR Expr
   61     | Expr . LT Expr
   62     | Expr . LTE Expr

    GTE       shift, and go to state 73
    LTE       shift, and go to state 74
    GT        shift, and go to state 75
    LT        shift, and go to state 76
    ADD       shift, and go to state 77
    MIN       shift, and go to state 78
    MUL       shift, and go to state 79
    DIV       shift, and go to state 80
    MOD       shift, and go to state 81
    COND_AND  shift, and go to state 82
    COND_OR   shift, and go to state 83
    OP_OR     shift, and go to state 84
    OP_AND    shift, and go to state 85

    $default  reduce using rule 56 (Expr)


State 111

   48 Expr: Expr . OP_OR Expr
   49     | Expr . OP_AND Expr
   50     | Expr . ADD Expr
   51     | Expr . MIN Expr
   52     | Expr . MUL Expr
   53     | Expr . DIV Expr
   54     | Expr . MOD Expr
   55     | Expr . EQUALS Expr
   56     | Expr . NOT_EQUALS Expr
   57     | Expr . GT Expr
   58     | Expr . GTE Expr
   58     | Expr GTE Expr .
   59     | Expr . COND_AND Expr
   60     | Expr . COND_OR Expr
   61     | Expr . LT Expr
   62     | Expr . LTE Expr

    ADD       shift, and go to state 77
    MIN       shift, and go to state 78
    MUL       shift, and go to state 79
    DIV       shift, and go to state 80
    MOD       shift, and go to state 81
    COND_AND  shift, and go to state 82
    COND_OR   shift, and go to state 83

    $default  reduce using rule 58 (Expr)


State 112

   48 Expr: Expr . OP_OR Expr
   49     | Expr . OP_AND Expr
   50     | Expr . ADD Expr
   51     | Expr . MIN Expr
   52     | Expr . MUL Expr
   53     | Expr . DIV Expr
   54     | Expr . MOD Expr
   55     | Expr . EQUALS Expr
   56     | Expr . NOT_EQUALS Expr
   57     | Expr . GT Expr
   58     | Expr . GTE Expr
   59     | Expr . COND_AND Expr
   60     | Expr . COND_OR Expr
   61     | Expr . LT Expr
   62     | Expr . LTE Expr
   62     | Expr LTE Expr .

    ADD       shift, and go to state 77
    MIN       shift, and go to state 78
    MUL       shift, and go to state 79
    DIV       shift, and go to state 80
    MOD       shift, and go to state 81
    COND_AND  shift, and go to state 82
    COND_OR   shift, and go to state 83

    $default  reduce using rule 62 (Expr)


State 113

   48 Expr: Expr . OP_OR Expr
   49     | Expr . OP_AND Expr
   50     | Expr . ADD Expr
   51     | Expr . MIN Expr
   52     | Expr . MUL Expr
   53     | Expr . DIV Expr
   54     | Expr . MOD Expr
   55     | Expr . EQUALS Expr
   56     | Expr . NOT_EQUALS Expr
   57     | Expr . GT Expr
   57     | Expr GT Expr .
   58     | Expr . GTE Expr
   59     | Expr . COND_AND Expr
   60     | Expr . COND_OR Expr
   61     | Expr . LT Expr
   62     | Expr . LTE Expr

    ADD       shift, and go to state 77
    MIN       shift, and go to state 78
    MUL       shift, and go to state 79
    DIV       shift, and go to state 80
    MOD       shift, and go to state 81
    COND_AND  shift, and go to state 82
    COND_OR   shift, and go to state 83

    $default  reduce using rule 57 (Expr)


State 114

   48 Expr: Expr . OP_OR Expr
   49     | Expr . OP_AND Expr
   50     | Expr . ADD Expr
   51     | Expr . MIN Expr
   52     | Expr . MUL Expr
   53     | Expr . DIV Expr
   54     | Expr . MOD Expr
   55     | Expr . EQUALS Expr
   56     | Expr . NOT_EQUALS Expr
   57     | Expr . GT Expr
   58     | Expr . GTE Expr
   59     | Expr . COND_AND Expr
   60     | Expr . COND_OR Expr
   61     | Expr . LT Expr
   61     | Expr LT Expr .
   62     | Expr . LTE Expr

    ADD       shift, and go to state 77
    MIN       shift, and go to state 78
    MUL       shift, and go to state 79
    DIV       shift, and go to state 80
    MOD       shift, and go to state 81
    COND_AND  shift, and go to state 82
    COND_OR   shift, and go to state 83

    $default  reduce using rule 61 (Expr)


State 115

   48 Expr: Expr . OP_OR Expr
   49     | Expr . OP_AND Expr
   50     | Expr . ADD Expr
   50     | Expr ADD Expr .
   51     | Expr . MIN Expr
   52     | Expr . MUL Expr
   53     | Expr . DIV Expr
   54     | Expr . MOD Expr
   55     | Expr . EQUALS Expr
   56     | Expr . NOT_EQUALS Expr
   57     | Expr . GT Expr
   58     | Expr . GTE Expr
   59     | Expr . COND_AND Expr
   60     | Expr . COND_OR Expr
   61     | Expr . LT Expr
   62     | Expr . LTE Expr

    COND_AND  shift, and go to state 82
    COND_OR   shift, and go to state 83

    $default  reduce using rule 50 (Expr)


State 116

   48 Expr: Expr . OP_OR Expr
   49     | Expr . OP_AND Expr
   50     | Expr . ADD Expr
   51     | Expr . MIN Expr
   51     | Expr MIN Expr .
   52     | Expr . MUL Expr
   53     | Expr . DIV Expr
   54     | Expr . MOD Expr
   55     | Expr . EQUALS Expr
   56     | Expr . NOT_EQUALS Expr
   57     | Expr . GT Expr
   58     | Expr . GTE Expr
   59     | Expr . COND_AND Expr
   60     | Expr . COND_OR Expr
   61     | Expr . LT Expr
   62     | Expr . LTE Expr

    COND_AND  shift, and go to state 82
    COND_OR   shift, and go to state 83

    $default  reduce using rule 51 (Expr)


State 117

   48 Expr: Expr . OP_OR Expr
   49     | Expr . OP_AND Expr
   50     | Expr . ADD Expr
   51     | Expr . MIN Expr
   52     | Expr . MUL Expr
   52     | Expr MUL Expr .
   53     | Expr . DIV Expr
   54     | Expr . MOD Expr
   55     | Expr . EQUALS Expr
   56     | Expr . NOT_EQUALS Expr
   57     | Expr . GT Expr
   58     | Expr . GTE Expr
   59     | Expr . COND_AND Expr
   60     | Expr . COND_OR Expr
   61     | Expr . LT Expr
   62     | Expr . LTE Expr

    COND_AND  shift, and go to state 82
    COND_OR   shift, and go to state 83

    $default  reduce using rule 52 (Expr)


State 118

   48 Expr: Expr . OP_OR Expr
   49     | Expr . OP_AND Expr
   50     | Expr . ADD Expr
   51     | Expr . MIN Expr
   52     | Expr . MUL Expr
   53     | Expr . DIV Expr
   53     | Expr DIV Expr .
   54     | Expr . MOD Expr
   55     | Expr . EQUALS Expr
   56     | Expr . NOT_EQUALS Expr
   57     | Expr . GT Expr
   58     | Expr . GTE Expr
   59     | Expr . COND_AND Expr
   60     | Expr . COND_OR Expr
   61     | Expr . LT Expr
   62     | Expr . LTE Expr

    COND_AND  shift, and go to state 82
    COND_OR   shift, and go to state 83

    $default  reduce using rule 53 (Expr)


State 119

   48 Expr: Expr . OP_OR Expr
   49     | Expr . OP_AND Expr
   50     | Expr . ADD Expr
   51     | Expr . MIN Expr
   52     | Expr . MUL Expr
   53     | Expr . DIV Expr
   54     | Expr . MOD Expr
   54     | Expr MOD Expr .
   55     | Expr . EQUALS Expr
   56     | Expr . NOT_EQUALS Expr
   57     | Expr . GT Expr
   58     | Expr . GTE Expr
   59     | Expr . COND_AND Expr
   60     | Expr . COND_OR Expr
   61     | Expr . LT Expr
   62     | Expr . LTE Expr

    COND_AND  shift, and go to state 82
    COND_OR   shift, and go to state 83

    $default  reduce using rule 54 (Expr)


State 120

   48 Expr: Expr . OP_OR Expr
   49     | Expr . OP_AND Expr
   50     | Expr . ADD Expr
   51     | Expr . MIN Expr
   52     | Expr . MUL Expr
   53     | Expr . DIV Expr
   54     | Expr . MOD Expr
   55     | Expr . EQUALS Expr
   56     | Expr . NOT_EQUALS Expr
   57     | Expr . GT Expr
   58     | Expr . GTE Expr
   59     | Expr . COND_AND Expr
   59     | Expr COND_AND Expr .
   60     | Expr . COND_OR Expr
   61     | Expr . LT Expr
   62     | Expr . LTE Expr

    $default  reduce using rule 59 (Expr)


State 121

   48 Expr: Expr . OP_OR Expr
   49     | Expr . OP_AND Expr
   50     | Expr . ADD Expr
   51     | Expr . MIN Expr
   52     | Expr . MUL Expr
   53     | Expr . DIV Expr
   54     | Expr . MOD Expr
   55     | Expr . EQUALS Expr
   56     | Expr . NOT_EQUALS Expr
   57     | Expr . GT Expr
   58     | Expr . GTE Expr
   59     | Expr . COND_AND Expr
   60     | Expr . COND_OR Expr
   60     | Expr COND_OR Expr .
   61     | Expr . LT Expr
   62     | Expr . LTE Expr

    $default  reduce using rule 60 (Expr)


State 122

   48 Expr: Expr . OP_OR Expr
   48     | Expr OP_OR Expr .
   49     | Expr . OP_AND Expr
   50     | Expr . ADD Expr
   51     | Expr . MIN Expr
   52     | Expr . MUL Expr
   53     | Expr . DIV Expr
   54     | Expr . MOD Expr
   55     | Expr . EQUALS Expr
   56     | Expr . NOT_EQUALS Expr
   57     | Expr . GT Expr
   58     | Expr . GTE Expr
   59     | Expr . COND_AND Expr
   60     | Expr . COND_OR Expr
   61     | Expr . LT Expr
   62     | Expr . LTE Expr

    GTE       shift, and go to state 73
    LTE       shift, and go to state 74
    GT        shift, and go to state 75
    LT        shift, and go to state 76
    ADD       shift, and go to state 77
    MIN       shift, and go to state 78
    MUL       shift, and go to state 79
    DIV       shift, and go to state 80
    MOD       shift, and go to state 81
    COND_AND  shift, and go to state 82
    COND_OR   shift, and go to state 83

    $default  reduce using rule 48 (Expr)


State 123

   48 Expr: Expr . OP_OR Expr
   49     | Expr . OP_AND Expr
   49     | Expr OP_AND Expr .
   50     | Expr . ADD Expr
   51     | Expr . MIN Expr
   52     | Expr . MUL Expr
   53     | Expr . DIV Expr
   54     | Expr . MOD Expr
   55     | Expr . EQUALS Expr
   56     | Expr . NOT_EQUALS Expr
   57     | Expr . GT Expr
   58     | Expr . GTE Expr
   59     | Expr . COND_AND Expr
   60     | Expr . COND_OR Expr
   61     | Expr . LT Expr
   62     | Expr . LTE Expr

    GTE       shift, and go to state 73
    LTE       shift, and go to state 74
    GT        shift, and go to state 75
    LT        shift, and go to state 76
    ADD       shift, and go to state 77
    MIN       shift, and go to state 78
    MUL       shift, and go to state 79
    DIV       shift, and go to state 80
    MOD       shift, and go to state 81
    COND_AND  shift, and go to state 82
    COND_OR   shift, and go to state 83

    $default  reduce using rule 49 (Expr)


State 124

   65 Run_Condition: OPEN_BRACE . Block CLOSE_BRACE

    $default  reduce using rule 2 (Block)

    Block  go to state 142


State 125

   64 Run_Condition: Line .

    $default  reduce using rule 64 (Run_Condition)


State 126

   69 Else_list: ELSE Run_Condition .

    $default  reduce using rule 69 (Else_list)


State 127

   32 Location: Datatype ID OPEN_BRACKET . Expr CLOSE_BRACKET
   79 ID_LIST: ID OPEN_BRACKET . Expr CLOSE_BRACKET

    OP_NOT      shift, and go to state 4
    OPEN_PAREN  shift, and go to state 6
    ID          shift, and go to state 43
    INT         shift, and go to state 18
    FLOAT       shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21
    BOOL        shift, and go to state 22

    Expr  go to state 143


State 128

   40 Expr: ID OPEN_BRACKET Expr . CLOSE_BRACKET
   48     | Expr . OP_OR Expr
   49     | Expr . OP_AND Expr
   50     | Expr . ADD Expr
   51     | Expr . MIN Expr
   52     | Expr . MUL Expr
   53     | Expr . DIV Expr
   54     | Expr . MOD Expr
   55     | Expr . EQUALS Expr
   56     | Expr . NOT_EQUALS Expr
   57     | Expr . GT Expr
   58     | Expr . GTE Expr
   59     | Expr . COND_AND Expr
   60     | Expr . COND_OR Expr
   61     | Expr . LT Expr
   62     | Expr . LTE Expr

    EQUALS         shift, and go to state 71
    NOT_EQUALS     shift, and go to state 72
    GTE            shift, and go to state 73
    LTE            shift, and go to state 74
    GT             shift, and go to state 75
    LT             shift, and go to state 76
    ADD            shift, and go to state 77
    MIN            shift, and go to state 78
    MUL            shift, and go to state 79
    DIV            shift, and go to state 80
    MOD            shift, and go to state 81
    COND_AND       shift, and go to state 82
    COND_OR        shift, and go to state 83
    OP_OR          shift, and go to state 84
    OP_AND         shift, and go to state 85
    CLOSE_BRACKET  shift, and go to state 144


State 129

   67 IF_list: IF OPEN_PAREN Expr CLOSE_PAREN . Run_Condition

    OP_NOT            shift, and go to state 4
    SEMICOLON         shift, and go to state 5
    OPEN_PAREN        shift, and go to state 6
    OPEN_BRACE        shift, and go to state 124
    IF                shift, and go to state 7
    FOR               shift, and go to state 8
    WHILE             shift, and go to state 9
    BREAK             shift, and go to state 10
    CONTINUE          shift, and go to state 11
    INT_DATA_TYPE     shift, and go to state 12
    FLOAT_DATA_TYPE   shift, and go to state 13
    CHAR_DATA_TYPE    shift, and go to state 14
    STRING_DATA_TYPE  shift, and go to state 15
    BOOL_DATA_TYPE    shift, and go to state 16
    ID                shift, and go to state 17
    INT               shift, and go to state 18
    FLOAT             shift, and go to state 19
    CHAR              shift, and go to state 20
    STRING            shift, and go to state 21
    BOOL              shift, and go to state 22
    CLASS             shift, and go to state 23
    IMPORT            shift, and go to state 24
    FUNCTION_DEC      shift, and go to state 25
    RETURN            shift, and go to state 26

    Line                 go to state 125
    Import_Statement     go to state 28
    Class_defination     go to state 29
    Declaration          go to state 30
    Function_defination  go to state 31
    Return_data          go to state 32
    Continue_data        go to state 33
    Break_data           go to state 34
    Assign               go to state 35
    Location             go to state 36
    Expr                 go to state 37
    Run_Condition        go to state 145
    Cond                 go to state 38
    IF_list              go to state 39
    Loop1                go to state 40
    Loop2                go to state 41
    Datatype             go to state 42


State 130

   30 Location: ID OPEN_BRACKET . Expr CLOSE_BRACKET

    OP_NOT      shift, and go to state 4
    OPEN_PAREN  shift, and go to state 6
    ID          shift, and go to state 43
    INT         shift, and go to state 18
    FLOAT       shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21
    BOOL        shift, and go to state 22

    Expr  go to state 146


State 131

   71 Loop2: FOR OPEN_PAREN Assign SEMICOLON . Expr SEMICOLON Assign CLOSE_PAREN Run_Condition

    OP_NOT      shift, and go to state 4
    OPEN_PAREN  shift, and go to state 6
    ID          shift, and go to state 43
    INT         shift, and go to state 18
    FLOAT       shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21
    BOOL        shift, and go to state 22

    Expr  go to state 147


State 132

   31 Location: Datatype ID .
   32         | Datatype ID . OPEN_BRACKET Expr CLOSE_BRACKET

    OPEN_BRACKET  shift, and go to state 148

    $default  reduce using rule 31 (Location)


State 133

   70 Loop1: WHILE OPEN_PAREN Expr CLOSE_PAREN . Run_Condition

    OP_NOT            shift, and go to state 4
    SEMICOLON         shift, and go to state 5
    OPEN_PAREN        shift, and go to state 6
    OPEN_BRACE        shift, and go to state 124
    IF                shift, and go to state 7
    FOR               shift, and go to state 8
    WHILE             shift, and go to state 9
    BREAK             shift, and go to state 10
    CONTINUE          shift, and go to state 11
    INT_DATA_TYPE     shift, and go to state 12
    FLOAT_DATA_TYPE   shift, and go to state 13
    CHAR_DATA_TYPE    shift, and go to state 14
    STRING_DATA_TYPE  shift, and go to state 15
    BOOL_DATA_TYPE    shift, and go to state 16
    ID                shift, and go to state 17
    INT               shift, and go to state 18
    FLOAT             shift, and go to state 19
    CHAR              shift, and go to state 20
    STRING            shift, and go to state 21
    BOOL              shift, and go to state 22
    CLASS             shift, and go to state 23
    IMPORT            shift, and go to state 24
    FUNCTION_DEC      shift, and go to state 25
    RETURN            shift, and go to state 26

    Line                 go to state 125
    Import_Statement     go to state 28
    Class_defination     go to state 29
    Declaration          go to state 30
    Function_defination  go to state 31
    Return_data          go to state 32
    Continue_data        go to state 33
    Break_data           go to state 34
    Assign               go to state 35
    Location             go to state 36
    Expr                 go to state 37
    Run_Condition        go to state 149
    Cond                 go to state 38
    IF_list              go to state 39
    Loop1                go to state 40
    Loop2                go to state 41
    Datatype             go to state 42


State 134

   82 Expr_List: Expr_List COMMA . Expr

    OP_NOT      shift, and go to state 4
    OPEN_PAREN  shift, and go to state 6
    ID          shift, and go to state 43
    INT         shift, and go to state 18
    FLOAT       shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21
    BOOL        shift, and go to state 22

    Expr  go to state 150


State 135

   41 Expr: ID OPEN_PAREN Expr_List CLOSE_PAREN .

    $default  reduce using rule 41 (Expr)


State 136

   30 Location: ID OPEN_BRACKET Expr CLOSE_BRACKET .
   40 Expr: ID OPEN_BRACKET Expr CLOSE_BRACKET .

    UNI_ADD   reduce using rule 30 (Location)
    UNI_MIN   reduce using rule 30 (Location)
    UNI_MUL   reduce using rule 30 (Location)
    UNI_DIV   reduce using rule 30 (Location)
    UNI_MOD   reduce using rule 30 (Location)
    ASSIGN    reduce using rule 30 (Location)
    $default  reduce using rule 40 (Expr)


State 137

    3 Block: Block . Line
   18 Class_defination: CLASS ID OPEN_BRACE Block . CLOSE_BRACE

    OP_NOT            shift, and go to state 4
    SEMICOLON         shift, and go to state 5
    OPEN_PAREN        shift, and go to state 6
    CLOSE_BRACE       shift, and go to state 151
    IF                shift, and go to state 7
    FOR               shift, and go to state 8
    WHILE             shift, and go to state 9
    BREAK             shift, and go to state 10
    CONTINUE          shift, and go to state 11
    INT_DATA_TYPE     shift, and go to state 12
    FLOAT_DATA_TYPE   shift, and go to state 13
    CHAR_DATA_TYPE    shift, and go to state 14
    STRING_DATA_TYPE  shift, and go to state 15
    BOOL_DATA_TYPE    shift, and go to state 16
    ID                shift, and go to state 17
    INT               shift, and go to state 18
    FLOAT             shift, and go to state 19
    CHAR              shift, and go to state 20
    STRING            shift, and go to state 21
    BOOL              shift, and go to state 22
    CLASS             shift, and go to state 23
    IMPORT            shift, and go to state 24
    FUNCTION_DEC      shift, and go to state 25
    RETURN            shift, and go to state 26

    Line                 go to state 27
    Import_Statement     go to state 28
    Class_defination     go to state 29
    Declaration          go to state 30
    Function_defination  go to state 31
    Return_data          go to state 32
    Continue_data        go to state 33
    Break_data           go to state 34
    Assign               go to state 35
    Location             go to state 36
    Expr                 go to state 37
    Cond                 go to state 38
    IF_list              go to state 39
    Loop1                go to state 40
    Loop2                go to state 41
    Datatype             go to state 42


State 138

   48 Expr: Expr . OP_OR Expr
   49     | Expr . OP_AND Expr
   50     | Expr . ADD Expr
   51     | Expr . MIN Expr
   52     | Expr . MUL Expr
   53     | Expr . DIV Expr
   54     | Expr . MOD Expr
   55     | Expr . EQUALS Expr
   56     | Expr . NOT_EQUALS Expr
   57     | Expr . GT Expr
   58     | Expr . GTE Expr
   59     | Expr . COND_AND Expr
   60     | Expr . COND_OR Expr
   61     | Expr . LT Expr
   62     | Expr . LTE Expr
   79 ID_LIST: ID OPEN_BRACKET Expr . CLOSE_BRACKET

    EQUALS         shift, and go to state 71
    NOT_EQUALS     shift, and go to state 72
    GTE            shift, and go to state 73
    LTE            shift, and go to state 74
    GT             shift, and go to state 75
    LT             shift, and go to state 76
    ADD            shift, and go to state 77
    MIN            shift, and go to state 78
    MUL            shift, and go to state 79
    DIV            shift, and go to state 80
    MOD            shift, and go to state 81
    COND_AND       shift, and go to state 82
    COND_OR        shift, and go to state 83
    OP_OR          shift, and go to state 84
    OP_AND         shift, and go to state 85
    CLOSE_BRACKET  shift, and go to state 152


State 139

   78 ID_LIST: ID_LIST COMMA ID .

    $default  reduce using rule 78 (ID_LIST)


State 140

   20 Function_defination: FUNCTION_DEC ID OPEN_PAREN Parameter_list . CLOSE_PAREN OPEN_BRACE Block CLOSE_BRACE
   23 Parameter_list: Parameter_list . COMMA Datatype ID

    COMMA        shift, and go to state 153
    CLOSE_PAREN  shift, and go to state 154


State 141

   22 Parameter_list: Datatype . ID

    ID  shift, and go to state 155


State 142

    3 Block: Block . Line
   65 Run_Condition: OPEN_BRACE Block . CLOSE_BRACE

    OP_NOT            shift, and go to state 4
    SEMICOLON         shift, and go to state 5
    OPEN_PAREN        shift, and go to state 6
    CLOSE_BRACE       shift, and go to state 156
    IF                shift, and go to state 7
    FOR               shift, and go to state 8
    WHILE             shift, and go to state 9
    BREAK             shift, and go to state 10
    CONTINUE          shift, and go to state 11
    INT_DATA_TYPE     shift, and go to state 12
    FLOAT_DATA_TYPE   shift, and go to state 13
    CHAR_DATA_TYPE    shift, and go to state 14
    STRING_DATA_TYPE  shift, and go to state 15
    BOOL_DATA_TYPE    shift, and go to state 16
    ID                shift, and go to state 17
    INT               shift, and go to state 18
    FLOAT             shift, and go to state 19
    CHAR              shift, and go to state 20
    STRING            shift, and go to state 21
    BOOL              shift, and go to state 22
    CLASS             shift, and go to state 23
    IMPORT            shift, and go to state 24
    FUNCTION_DEC      shift, and go to state 25
    RETURN            shift, and go to state 26

    Line                 go to state 27
    Import_Statement     go to state 28
    Class_defination     go to state 29
    Declaration          go to state 30
    Function_defination  go to state 31
    Return_data          go to state 32
    Continue_data        go to state 33
    Break_data           go to state 34
    Assign               go to state 35
    Location             go to state 36
    Expr                 go to state 37
    Cond                 go to state 38
    IF_list              go to state 39
    Loop1                go to state 40
    Loop2                go to state 41
    Datatype             go to state 42


State 143

   32 Location: Datatype ID OPEN_BRACKET Expr . CLOSE_BRACKET
   48 Expr: Expr . OP_OR Expr
   49     | Expr . OP_AND Expr
   50     | Expr . ADD Expr
   51     | Expr . MIN Expr
   52     | Expr . MUL Expr
   53     | Expr . DIV Expr
   54     | Expr . MOD Expr
   55     | Expr . EQUALS Expr
   56     | Expr . NOT_EQUALS Expr
   57     | Expr . GT Expr
   58     | Expr . GTE Expr
   59     | Expr . COND_AND Expr
   60     | Expr . COND_OR Expr
   61     | Expr . LT Expr
   62     | Expr . LTE Expr
   79 ID_LIST: ID OPEN_BRACKET Expr . CLOSE_BRACKET

    EQUALS         shift, and go to state 71
    NOT_EQUALS     shift, and go to state 72
    GTE            shift, and go to state 73
    LTE            shift, and go to state 74
    GT             shift, and go to state 75
    LT             shift, and go to state 76
    ADD            shift, and go to state 77
    MIN            shift, and go to state 78
    MUL            shift, and go to state 79
    DIV            shift, and go to state 80
    MOD            shift, and go to state 81
    COND_AND       shift, and go to state 82
    COND_OR        shift, and go to state 83
    OP_OR          shift, and go to state 84
    OP_AND         shift, and go to state 85
    CLOSE_BRACKET  shift, and go to state 157


State 144

   40 Expr: ID OPEN_BRACKET Expr CLOSE_BRACKET .

    $default  reduce using rule 40 (Expr)


State 145

   67 IF_list: IF OPEN_PAREN Expr CLOSE_PAREN Run_Condition .

    $default  reduce using rule 67 (IF_list)


State 146

   30 Location: ID OPEN_BRACKET Expr . CLOSE_BRACKET
   48 Expr: Expr . OP_OR Expr
   49     | Expr . OP_AND Expr
   50     | Expr . ADD Expr
   51     | Expr . MIN Expr
   52     | Expr . MUL Expr
   53     | Expr . DIV Expr
   54     | Expr . MOD Expr
   55     | Expr . EQUALS Expr
   56     | Expr . NOT_EQUALS Expr
   57     | Expr . GT Expr
   58     | Expr . GTE Expr
   59     | Expr . COND_AND Expr
   60     | Expr . COND_OR Expr
   61     | Expr . LT Expr
   62     | Expr . LTE Expr

    EQUALS         shift, and go to state 71
    NOT_EQUALS     shift, and go to state 72
    GTE            shift, and go to state 73
    LTE            shift, and go to state 74
    GT             shift, and go to state 75
    LT             shift, and go to state 76
    ADD            shift, and go to state 77
    MIN            shift, and go to state 78
    MUL            shift, and go to state 79
    DIV            shift, and go to state 80
    MOD            shift, and go to state 81
    COND_AND       shift, and go to state 82
    COND_OR        shift, and go to state 83
    OP_OR          shift, and go to state 84
    OP_AND         shift, and go to state 85
    CLOSE_BRACKET  shift, and go to state 158


State 147

   48 Expr: Expr . OP_OR Expr
   49     | Expr . OP_AND Expr
   50     | Expr . ADD Expr
   51     | Expr . MIN Expr
   52     | Expr . MUL Expr
   53     | Expr . DIV Expr
   54     | Expr . MOD Expr
   55     | Expr . EQUALS Expr
   56     | Expr . NOT_EQUALS Expr
   57     | Expr . GT Expr
   58     | Expr . GTE Expr
   59     | Expr . COND_AND Expr
   60     | Expr . COND_OR Expr
   61     | Expr . LT Expr
   62     | Expr . LTE Expr
   71 Loop2: FOR OPEN_PAREN Assign SEMICOLON Expr . SEMICOLON Assign CLOSE_PAREN Run_Condition

    EQUALS      shift, and go to state 71
    NOT_EQUALS  shift, and go to state 72
    GTE         shift, and go to state 73
    LTE         shift, and go to state 74
    GT          shift, and go to state 75
    LT          shift, and go to state 76
    ADD         shift, and go to state 77
    MIN         shift, and go to state 78
    MUL         shift, and go to state 79
    DIV         shift, and go to state 80
    MOD         shift, and go to state 81
    COND_AND    shift, and go to state 82
    COND_OR     shift, and go to state 83
    OP_OR       shift, and go to state 84
    OP_AND      shift, and go to state 85
    SEMICOLON   shift, and go to state 159


State 148

   32 Location: Datatype ID OPEN_BRACKET . Expr CLOSE_BRACKET

    OP_NOT      shift, and go to state 4
    OPEN_PAREN  shift, and go to state 6
    ID          shift, and go to state 43
    INT         shift, and go to state 18
    FLOAT       shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21
    BOOL        shift, and go to state 22

    Expr  go to state 160


State 149

   70 Loop1: WHILE OPEN_PAREN Expr CLOSE_PAREN Run_Condition .

    $default  reduce using rule 70 (Loop1)


State 150

   48 Expr: Expr . OP_OR Expr
   49     | Expr . OP_AND Expr
   50     | Expr . ADD Expr
   51     | Expr . MIN Expr
   52     | Expr . MUL Expr
   53     | Expr . DIV Expr
   54     | Expr . MOD Expr
   55     | Expr . EQUALS Expr
   56     | Expr . NOT_EQUALS Expr
   57     | Expr . GT Expr
   58     | Expr . GTE Expr
   59     | Expr . COND_AND Expr
   60     | Expr . COND_OR Expr
   61     | Expr . LT Expr
   62     | Expr . LTE Expr
   82 Expr_List: Expr_List COMMA Expr .

    EQUALS      shift, and go to state 71
    NOT_EQUALS  shift, and go to state 72
    GTE         shift, and go to state 73
    LTE         shift, and go to state 74
    GT          shift, and go to state 75
    LT          shift, and go to state 76
    ADD         shift, and go to state 77
    MIN         shift, and go to state 78
    MUL         shift, and go to state 79
    DIV         shift, and go to state 80
    MOD         shift, and go to state 81
    COND_AND    shift, and go to state 82
    COND_OR     shift, and go to state 83
    OP_OR       shift, and go to state 84
    OP_AND      shift, and go to state 85

    $default  reduce using rule 82 (Expr_List)


State 151

   18 Class_defination: CLASS ID OPEN_BRACE Block CLOSE_BRACE .

    $default  reduce using rule 18 (Class_defination)


State 152

   79 ID_LIST: ID OPEN_BRACKET Expr CLOSE_BRACKET .

    $default  reduce using rule 79 (ID_LIST)


State 153

   23 Parameter_list: Parameter_list COMMA . Datatype ID

    INT_DATA_TYPE     shift, and go to state 12
    FLOAT_DATA_TYPE   shift, and go to state 13
    CHAR_DATA_TYPE    shift, and go to state 14
    STRING_DATA_TYPE  shift, and go to state 15
    BOOL_DATA_TYPE    shift, and go to state 16

    Datatype  go to state 161


State 154

   20 Function_defination: FUNCTION_DEC ID OPEN_PAREN Parameter_list CLOSE_PAREN . OPEN_BRACE Block CLOSE_BRACE

    OPEN_BRACE  shift, and go to state 162


State 155

   22 Parameter_list: Datatype ID .

    $default  reduce using rule 22 (Parameter_list)


State 156

   65 Run_Condition: OPEN_BRACE Block CLOSE_BRACE .

    $default  reduce using rule 65 (Run_Condition)


State 157

   32 Location: Datatype ID OPEN_BRACKET Expr CLOSE_BRACKET .
   79 ID_LIST: ID OPEN_BRACKET Expr CLOSE_BRACKET .

    COMMA      reduce using rule 79 (ID_LIST)
    SEMICOLON  reduce using rule 79 (ID_LIST)
    $default   reduce using rule 32 (Location)


State 158

   30 Location: ID OPEN_BRACKET Expr CLOSE_BRACKET .

    $default  reduce using rule 30 (Location)


State 159

   71 Loop2: FOR OPEN_PAREN Assign SEMICOLON Expr SEMICOLON . Assign CLOSE_PAREN Run_Condition

    INT_DATA_TYPE     shift, and go to state 12
    FLOAT_DATA_TYPE   shift, and go to state 13
    CHAR_DATA_TYPE    shift, and go to state 14
    STRING_DATA_TYPE  shift, and go to state 15
    BOOL_DATA_TYPE    shift, and go to state 16
    ID                shift, and go to state 97

    Assign    go to state 163
    Location  go to state 36
    Datatype  go to state 99


State 160

   32 Location: Datatype ID OPEN_BRACKET Expr . CLOSE_BRACKET
   48 Expr: Expr . OP_OR Expr
   49     | Expr . OP_AND Expr
   50     | Expr . ADD Expr
   51     | Expr . MIN Expr
   52     | Expr . MUL Expr
   53     | Expr . DIV Expr
   54     | Expr . MOD Expr
   55     | Expr . EQUALS Expr
   56     | Expr . NOT_EQUALS Expr
   57     | Expr . GT Expr
   58     | Expr . GTE Expr
   59     | Expr . COND_AND Expr
   60     | Expr . COND_OR Expr
   61     | Expr . LT Expr
   62     | Expr . LTE Expr

    EQUALS         shift, and go to state 71
    NOT_EQUALS     shift, and go to state 72
    GTE            shift, and go to state 73
    LTE            shift, and go to state 74
    GT             shift, and go to state 75
    LT             shift, and go to state 76
    ADD            shift, and go to state 77
    MIN            shift, and go to state 78
    MUL            shift, and go to state 79
    DIV            shift, and go to state 80
    MOD            shift, and go to state 81
    COND_AND       shift, and go to state 82
    COND_OR        shift, and go to state 83
    OP_OR          shift, and go to state 84
    OP_AND         shift, and go to state 85
    CLOSE_BRACKET  shift, and go to state 164


State 161

   23 Parameter_list: Parameter_list COMMA Datatype . ID

    ID  shift, and go to state 165


State 162

   20 Function_defination: FUNCTION_DEC ID OPEN_PAREN Parameter_list CLOSE_PAREN OPEN_BRACE . Block CLOSE_BRACE

    $default  reduce using rule 2 (Block)

    Block  go to state 166


State 163

   71 Loop2: FOR OPEN_PAREN Assign SEMICOLON Expr SEMICOLON Assign . CLOSE_PAREN Run_Condition

    CLOSE_PAREN  shift, and go to state 167


State 164

   32 Location: Datatype ID OPEN_BRACKET Expr CLOSE_BRACKET .

    $default  reduce using rule 32 (Location)


State 165

   23 Parameter_list: Parameter_list COMMA Datatype ID .

    $default  reduce using rule 23 (Parameter_list)


State 166

    3 Block: Block . Line
   20 Function_defination: FUNCTION_DEC ID OPEN_PAREN Parameter_list CLOSE_PAREN OPEN_BRACE Block . CLOSE_BRACE

    OP_NOT            shift, and go to state 4
    SEMICOLON         shift, and go to state 5
    OPEN_PAREN        shift, and go to state 6
    CLOSE_BRACE       shift, and go to state 168
    IF                shift, and go to state 7
    FOR               shift, and go to state 8
    WHILE             shift, and go to state 9
    BREAK             shift, and go to state 10
    CONTINUE          shift, and go to state 11
    INT_DATA_TYPE     shift, and go to state 12
    FLOAT_DATA_TYPE   shift, and go to state 13
    CHAR_DATA_TYPE    shift, and go to state 14
    STRING_DATA_TYPE  shift, and go to state 15
    BOOL_DATA_TYPE    shift, and go to state 16
    ID                shift, and go to state 17
    INT               shift, and go to state 18
    FLOAT             shift, and go to state 19
    CHAR              shift, and go to state 20
    STRING            shift, and go to state 21
    BOOL              shift, and go to state 22
    CLASS             shift, and go to state 23
    IMPORT            shift, and go to state 24
    FUNCTION_DEC      shift, and go to state 25
    RETURN            shift, and go to state 26

    Line                 go to state 27
    Import_Statement     go to state 28
    Class_defination     go to state 29
    Declaration          go to state 30
    Function_defination  go to state 31
    Return_data          go to state 32
    Continue_data        go to state 33
    Break_data           go to state 34
    Assign               go to state 35
    Location             go to state 36
    Expr                 go to state 37
    Cond                 go to state 38
    IF_list              go to state 39
    Loop1                go to state 40
    Loop2                go to state 41
    Datatype             go to state 42


State 167

   71 Loop2: FOR OPEN_PAREN Assign SEMICOLON Expr SEMICOLON Assign CLOSE_PAREN . Run_Condition

    OP_NOT            shift, and go to state 4
    SEMICOLON         shift, and go to state 5
    OPEN_PAREN        shift, and go to state 6
    OPEN_BRACE        shift, and go to state 124
    IF                shift, and go to state 7
    FOR               shift, and go to state 8
    WHILE             shift, and go to state 9
    BREAK             shift, and go to state 10
    CONTINUE          shift, and go to state 11
    INT_DATA_TYPE     shift, and go to state 12
    FLOAT_DATA_TYPE   shift, and go to state 13
    CHAR_DATA_TYPE    shift, and go to state 14
    STRING_DATA_TYPE  shift, and go to state 15
    BOOL_DATA_TYPE    shift, and go to state 16
    ID                shift, and go to state 17
    INT               shift, and go to state 18
    FLOAT             shift, and go to state 19
    CHAR              shift, and go to state 20
    STRING            shift, and go to state 21
    BOOL              shift, and go to state 22
    CLASS             shift, and go to state 23
    IMPORT            shift, and go to state 24
    FUNCTION_DEC      shift, and go to state 25
    RETURN            shift, and go to state 26

    Line                 go to state 125
    Import_Statement     go to state 28
    Class_defination     go to state 29
    Declaration          go to state 30
    Function_defination  go to state 31
    Return_data          go to state 32
    Continue_data        go to state 33
    Break_data           go to state 34
    Assign               go to state 35
    Location             go to state 36
    Expr                 go to state 37
    Run_Condition        go to state 169
    Cond                 go to state 38
    IF_list              go to state 39
    Loop1                go to state 40
    Loop2                go to state 41
    Datatype             go to state 42


State 168

   20 Function_defination: FUNCTION_DEC ID OPEN_PAREN Parameter_list CLOSE_PAREN OPEN_BRACE Block CLOSE_BRACE .

    $default  reduce using rule 20 (Function_defination)


State 169

   71 Loop2: FOR OPEN_PAREN Assign SEMICOLON Expr SEMICOLON Assign CLOSE_PAREN Run_Condition .

    $default  reduce using rule 71 (Loop2)
